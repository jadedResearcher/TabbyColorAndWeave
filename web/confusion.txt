I notice I am confused.

If I have both heddle and warp chain groups rendered to the svg (still no graphics) the individual warp chains render to the heddle group.

if i remove the heddle group they don't show up anywhere in the dom.

do svg groups work differnet than i think?

ah i see, the heddle view is still using divs, not groups. whoops. also i made its class WarpChain like a dunkass

so REALLY the problem is NO group really works


alright new confusion actually.

heddle group has two heddle subgroups in it.

but warpChain group has nothing in it STILL.

still don't know why but if i coyp heddle's code to warp chain it works so *shrug*

hrm...

        /*int x = 0;
        for(WarpThread thread in chain.threads) {
            x+= 10;
            new ThreadView(thread, element,x)..renderThread();
        }*/

that seems to break it. why?

~~~

alright so what i wanna do right now is programmatically get a default threading go, then take a break for maybe an hour, clear my head
and THEN Worry about rendering threads.

this'll be the meat of this. does thread veer left or right? i don't fucking know and i hope svg paths can help me.


when return: use svg path to draw a thing line between the thread, and each heddle_index/section_index pair it has.
(should i destroy and recreate if it changes, or should i transform?)
(test if drag around heddle if threads move with, at least at end)


~~~~~~~~~~~~~~~~

its rendering!!!!

the only problem is that its rendering relative to the color group and not like, global coordinates?
   but you can see how, albeit offset, its attempting to thread itself into a single heddle


   gonna grab lunch and then see like...how do i get or specify global coordinates?

   gotcha! it wasn't global vs local coordinates, it was that i was moving the heddle with a transform


   ~~~

i notice i am confused

if(totalIndex%2==0) {
                    thread.heddleSections.add(heddles[0].holesAndSlots[heddle1Index]);
                    heddle1Index+= 1;
                }else {
                    thread.heddleSections.add(heddles[1].holesAndSlots[heddle2Index]);
                    heddle2Index+= 1;
                }
that's not right because it implies it never goes through the second heddle...

i need a way to ask a heddle "get me next slot to right of i", or left....



i think i need a break to clear my head.

my current confusion is:

JR NOTE: looking front slot that veers left to back hole
dart_sdk.js:18676 JR NOTE: left slot found at index 1, when initial was 3

but i SEE that the thing going through the slot is veering right, looks like index ................

oh.

I've been doing this all wrong.

I'm a FOOL.

index isn't just "total /2" or even "how many threads have gone into a single heddle"  BECAUSE MULTIPLE THREADS GO INTO THE SAME SECTION.

i'm a fool .  index should just be (for these start up algs) how many threads are already done. no no, thats not right its...


hrm.

Okay let's go through the use case.

I have a slot going through both heddles. The next thread is "same slot as before, but veer left after".

i'm not looking for an index so much as a spot? how do i know when to move right?  when all four threads are placed....

~~~~

okay i got the basic double heddle more or less done but i wanted to thread for twill and wow it fucke dup. crossed threads everywhere.

far right slot to left hole is going into a hole BEFORE the slot hole to its left. why??? that one is veering to the right for...REASONS???

ten minutes till movie night

~~~

i think i've gotten distracted trying to do default things?
i think i wanna focus instead on getting the ui/serialization working cuz then i can just make the defaults same way i did for the non rigidheddle one.

i wanna focus nearly entirely on rigid heddle to fabric tomorrow, which means making a pick system.
  do i want it above or below the heddle? to the side?


 ANYWAYS got an hour before game night and i wanna get my thoughts straight:

UI:

x  I want to be able to click a thread box to select it. At which point it should be highlighted, have its heddle list cleared, AND instructions should display on screen
x I want to click a slot or hole while a thread box is selected to add that slot or hole to its heddle list
x ability to rerender thread.


Picks:
x I want to be able to have a set of default picks for my fabric.
* i want picks to be rendered on screen as Pick X and an editable color and heddle states dropdowns (up, down, neutral).
*I want to be able to delete an existing pick.
*I want to be able to add a pick
x I want to display a canvas fabric based on my threading and my picks so far. (since each thread knows what what sections it has should be able to turn that into sheds)
* i want a button to sync canvas to current heddle (don't do it live)

Serialization:
* I want to be able to save the size of my heddle and how many heddles there are.  (even if not yet configurable)
* I want to be able to save each thread, including color and heddle list (original idea of list of indices) (even if not yet configurable)
* I want to be able to save each pick, which would be color, and state of each heddle
* I want to serialize to the canvas as image archive
* I want to be able to load from image archive


Stretch goals:
* I want to be able to number the threads
* I want to be able to say "repeat threads 3-14 7 times" (but only for existing threads).
* I want to be able to say "repeat picks 3-14 7 times" (and add picks)


Alright so, I completed the ui entirely (including interactivity) for the rigid heddle portion yesterday.

Today I want to focus on getting picks in and creating fabric (even if nothing is interactive YET).

I want a Pick object that has color, and an array of HeddleStates that contain a heddle and then an ENUM or whatever for up/down/neutral.

Then, I want to get that rendering to a canvas. Warp threads know what heddles they are touching so...

If a warp thread is heddle1 hole and heddle2 slot, then it  says its up if heddle1 is up or if heddle 2 is down.
 I can turn that into 1,0 pick patterns for the original fabric thingy. warpthread can just become a warp object for that.


 lets go. first up is pick object.

 i want my default pick to be both up, both down. plain weave. black thread.

 alright i'm writing the pick to  pickuppattern thing and i wanna think this thru, got an hour before anime.

 if my state is 1 up 2 neutral than any thread in 1's hole will be 1 and everything else will be 0


 So, theres a few different ways I can do this right? I wanna go in order cuz the ones and zeroes are in order.

 So....


 Lets walk through the algorithm and see if anything obvious shakes loose or if we just need to do this the dumb, iterative way.



 Let's say I have four threads total.

 thread 1 is 1U 2N
 thread 2 is 1N 2U
 thread 3 is 1D 2D
 thread 4 is 1U 2U

 actually lets map out all states i don't THINK you can have one up and another down in rigid heddle? but lets modal it anyways

 1U 2N
 1U 2D
 1U 2U

 1D 2N
 1D 2D
 1D 2U

 1N 2N
 1N 2D
 1N 2U

 does that cover all states?
 probably not? when i look through permutation/combination calculators theres either a lot more or a lot less.

 but i genuinely think it is?

 aNYWAYS this isn't the point lets stay focused.

 given an arbitrary amount of heddles what do i do?

 lets go back to the toy:

  thread 1 is 1U 2N
  thread 2 is 1N 2U
  thread 3 is 1D 2D
  thread 4 is 1U 2U


  So I'm in thread 1 and I have a pick. My pick is 1U

  wait that thread is wrong? threads aren't u/d/n they are hole or slot.

  whoops.


  Okay thread 1 is 1H 2S

  1H 2S
  1S 2H
  1S 2S
  1H 2H


  lets do this.

  So I'm on thread one and my pick is 1U 2N.

  Any thread with pick 1 up will be 1. Anything else will be zero.

  Let's say my picks are
 is 1U 2N
is 1N 2U
1D 2D
1U 2U

so what would my binary be?

1,0,0,1
0,1,0,1
1,1,1,1  <-- this does NOT seem right
1,1,0,1



So one thing I noticed is that if both heddles are down shit gets *weird*. If they are down anything "with a slot" should be up but...that doesn't
make sene intuitively? I've got a loom threaded for twill right now, lets check it out.


gotcha, found the problem: if there are NO holes they'll be up, but even a single hole pulls it down.


so its REALLY 0,0,1,0 for all down (which is the opposite of all up).


so, what algorithm did I use to generate those, and how can i tell a computer about it?

for that first pick , 1,0,0,1 i said " the first thread returns 1 becauase you can ignore neutral threads, and the first hole is up so its up"


now, can you REALLY ignore neutral threads? are they always down? lets check.

ah i see, its RELATIVE.  a shed in neutral might have its thread be in the "up" position if the other shed is down.

so what this means to me is i will NOT be solving this for "any arbitrary number of heddles".
 I keep referring back to my double heddle, so I'm not going to be doing it for three until I have one in the flesh.

 alright so we're only doing doubles.


 so, would an algorithm be
 "if its a hole and the heddle is up its up no matter what the other heddle is doing"
  and
  "if its a slot its up ONLY if the heddle is higher than its opposite "?


  So a thread would be one in the following states:

* Any heddle is up and its in a hole in it
* a heddle its a slot in is in neutral and a heddle its in a hole in is in down
* a heddle its a slot in is in up and a heddle its in a hole in is neutral <-- is this bullshit?

lets investigate

seems to be...  my loom has the holes of the up heddle as up and everything else down.

so is there only two states?

lets watch my loom with a single thread.

I'm watching a thread that is slot/slot.  when one heddle is up, its down (doesn't matter which one).  when either heddle is down its up.

lets watch the next thread. its thru the first hole and the second slot. if its heddle is down its down. if its up its up.


so if a thread is through a hole the only thing that matters is the state of that hole?

if its through both slot then it only matters that at least one heddle is donw.


i do see a third state.   if this hole/slot thread is in neutral and the othe rguy is down, its up.



so...

If my hole heddle is up, I'm *always* up.
If my hole heddle is neutral, I'm up if the other heddle is down.
If my hole heddle is down, I'm *always* down.
If I have no hole heddle, I'm up if both heddles are down.

that...seems viable?

~~~~~~~~~
need to test
that the picks turn into binary okay.

~~~

I notice I am confused. When I output a particular pick pattern's binary equivalent,
 and then manually put that in 1.0 weaving sim, it looks basically as expected.

 but when its in the fabric system automatically it just...does plain weave.

 is it ignoring me?
it was.

~~~~~~~~~~~
break time

Picks:
x I want to be able to have a set of default picks for my fabric.
x i want a button to sync canvas to current heddle (don't do it live)
x button to clear all threadings
* i want picks to be rendered on screen as Pick X and an editable color and heddle states dropdowns (up, down, neutral).
*I want to be able to delete an existing pick.
*I want to be able to add a pick
x I want to display a canvas fabric based on my threading and my picks so far. (since each thread knows what what sections it has should be able to turn that into sheds)


Serialization:
* I want to be able to save the size of my heddle and how many heddles there are.  (even if not yet configurable)
* I want to be able to save each thread, including color and heddle list (original idea of list of indices) (even if not yet configurable)
* I want to be able to save each pick, which would be color, and state of each heddle
* I want to serialize to the canvas as image archive
* I want to be able to load from image archive


Stretch goals:
* I want to be able to say "set color to X for thread X and Y threads after"
* I want to be able to say "repeat threads 3-14 7 times" (but only for existing threads).
* I want to be able to say "repeat picks 3-14 7 times" (and add picks)
* I want to be able to number the threads




